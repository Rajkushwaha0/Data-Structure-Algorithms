//O(N)
//O(1)
class Solution {
    public int[] applyOperations(int[] nums) {
        int i=0;
        int n = nums.length;
        int [] ans = new int[n];
        for(int j=0;j<n-1;j++){
            if(nums[j]==0){
                continue ;
            }
            if(nums[j]==nums[j+1]){
                int newValue = nums[j]*2;
                ans[i]=newValue;
                nums[j+1]=0;
                i++;
            }else{
                ans[i]=nums[j];
                i++;
            }
        }
        if(nums[n-1]!=0){
            ans[i]=nums[n-1];
        }
        return ans;
    }
}


//O(N+N)
//O(1)
class Solution {
    public int[] applyOperations(int[] nums) {
        int[] ans = new int[nums.length];
        for(int i=0;i<nums.length-1;i++){
            if(nums[i]!=nums[i+1]) ans[i]=nums[i];
            if(nums[i]==nums[i+1]) {
                ans[i]=nums[i]*2;
                nums[i+1]=0;
            }
        }
        ans[nums.length-1]=nums[nums.length-1];
        return solve(ans);
    }
    public int[] solve(int[] nums){
        int[] ans=new int[nums.length];
        int j=0;
        for(int i=0;i<nums.length;i++){
            if(nums[i]!=0) ans[j++]=nums[i];
        }
        return ans;
    }
}
